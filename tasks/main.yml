---
- name: checkout phpbrew
  git: repo=https://github.com/phpbrew/phpbrew.git dest=/opt/phpbrew-bin

- name: make a link to phpbrew
  file: state=link src=/opt/phpbrew-bin/phpbrew dest=/usr/bin/phpbrew

- name: install PHP CLI interpreter
  apt: name=php-cli state=present

- name: create phpbrew root
  file: state=directory dest=/opt/phpbrew

- name: run phpbrew init
  shell: phpbrew init --root=/opt/phpbrew

- name: install gcc
  apt: name=gcc state=present

- name: install libxml2-dev
  apt: name=libxml2-dev state=present

- name: install libssl-dev
  apt: name=libssl-dev state=present

- name: install libbz2-dev
  apt: name=libbz2-dev state=present

- name: install g++
  apt: name=g++ state=present

- name: install mcrypt
  apt: name=libmcrypt-dev state=present

- name: install libxslt1-dev
  apt: name=libxslt1-dev state=present

- name: install make
  apt: name=make state=present

- name: install autoconf
  apt: name=autoconf state=present

- name: install libyaml-dev
  apt: name=libyaml-dev state=present

- name: install libpng16-dev
  apt: name=libpng16-dev state=present

- name: install libpq-dev
  apt: name=libpq-dev state=present

- name: install libc-client-dev
  apt: name=libc-client-dev state=present

- name: install libkrb5-dev
  apt: name=libkrb5-dev state=present

- name: install libcurl4-openssl-dev
  apt: name=libcurl4-openssl-dev state=present

- name: create a PHP environment with phpbrew
  shell: PHPBREW_ROOT=/opt/phpbrew PHPBREW_HOME=/opt/phpbrew phpbrew install {{ phpbrew_php_version }} {{ phpbrew_php_variants }} creates="/opt/phpbrew/php/php-{{ phpbrew_php_version }}/bin/php"

- name: install PHP extensions
  shell: bash -c "export PHPBREW_ROOT=/opt/phpbrew && export PHPBREW_HOME=/opt/phpbrew && source /root/.phpbrew/bashrc && phpbrew switch php-{{ phpbrew_php_version }} && phpbrew ext install {{ item.name }}" creates="/opt/phpbrew/php/php-{{ phpbrew_php_version }}/var/db/{{ item.config }}"
  with_items:
    - { name: yaml, config: "yaml.ini" }
    - { name: gd, config: "gd.ini" }
    - { name: curl, config: "curl.ini" }
      #- { name: imap, config: "imap.ini" }
    - { name: pdo_pgsql, config: "pdo_pgsql.ini" }
    - { name: "raphf 1.1.0", config: "raphf.ini" }
    - { name: "propro 1.0.0", config: "propro.ini" }
    - { name: "pecl_http 2.5.5", config: "http.ini" }
    - { name: "github:phalcon/cphalcon phalcon-v2.0.9", config: "phalcon.ini" }
    - { name: rar, config: "rar.ini" }
    - { name: shmop, config: "shmop.ini" }
  notify: "restart php-fpm"

- name: put php-fpm.conf
  template: src=php-fpm.conf dest="/opt/phpbrew/php/php-{{ phpbrew_php_version }}/etc/php-fpm.conf"
  when: "phpbrew_enable_php_fpm_service"
  notify: "restart php-fpm"

- name: set timezone in php.ini
  lineinfile:
    dest: "/opt/phpbrew/php/php-{{ phpbrew_php_version }}/etc/php.ini"
    regexp: "^;date.timezone ="
    line: "date.timezone = \"{{ timezone }}\""
  when: "timezone|default(False) != False"
  notify: "restart php-fpm"

- name: put php-fpm unit file
  template: src=php-fpm.service dest="/etc/systemd/system/php-fpm{{ phpbrew_php_version | regex_replace('\\.', '_') }}.service" owner=root group=root mode=0644
  when: "phpbrew_enable_php_fpm_service and ((ansible_distribution == 'Debian' and ansible_distribution_major_version == '8') or (ansible_distribution == 'Ubuntu' and (ansible_distribution_version|version_compare(14.04, '>'))))"

- name: enable php-fpm service
  service: name="php-fpm{{ phpbrew_php_version | regex_replace('\\.', '_') }}" enabled=yes state=started
  when: "phpbrew_enable_php_fpm_service and ((ansible_distribution == 'Debian' and ansible_distribution_major_version == '8') or (ansible_distribution == 'Ubuntu' and (ansible_distribution_version|version_compare(14.04, '>'))))"
